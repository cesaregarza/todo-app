{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/default-todos.ts","webpack:///./src/app/todoclass.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".supermassivebox{\\n    height: 100vh;\\n}\\n\\n.bigbox{\\n    width: 100%;\\n    max-width: 500px;\\n    height: 80%;\\n}\\n\\n.hugebox{\\n    height: 100%;\\n    overflow: scroll;\\n}\\n\\n.sortbuttons{\\n\\n}\\n\\n.appheader{\\n    height: 130px;\\n}\\n\\n.filters{\\n\\n}\\n\\n.circle{\\n    width: 30px;\\n    height: 30px;\\n    text-align: center;\\n    padding: 6px;\\n    font-size: 10px;\\n    line-height: 1.42;\\n    border-radius: 15px;\\n}\\n\\n.oneclick{\\n    color: red;\\n}\"","module.exports = \"<div class=\\\"container-fluid supermassivebox\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1 class=\\\"text-center mt-5\\\">todo</h1>\\n    </div>\\n  </div>\\n\\n  <!-- Where the todo box is going to be -->\\n  <div class=\\\"d-flex flex-row justify-content-center hugebox\\\">\\n    <!-- Container for the whole todo box -->\\n    <div class=\\\"d-flex flex-column bigbox px-4 shadow-lg\\\">\\n      <div *ngIf=\\\"!newtask\\\" class=\\\"appheader\\\">\\n        <!-- Sorting buttons -->\\n        <div class=\\\"d-flex flex-row sorters justify-content-end\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm sortbuttons px-1\\\">\\n            Alphabetical\\n            <i class=\\\"fas fa-sort-alpha-down\\\"></i>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm sortbuttons px-1\\\">\\n            Due Date\\n            <i class=\\\"fas fa-calendar-alt\\\"></i>\\n            <span class=\\\"px-1\\\">\\n              <i class=\\\"fas fa-sort-down\\\"></i>\\n            </span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm sortbuttons px-1\\\">\\n            Date Created\\n            <i class=\\\"fas fa-sort-numeric-down\\\"></i>\\n          </button>\\n        </div>\\n        <!-- /Sorting Buttons -->\\n        <!-- Create Button -->\\n        <div class=\\\"d-flex flex-row justify-content-between align-items-center pb-3\\\">\\n          <div>\\n            <button class=\\\"btn btn-outline-dark btn-block\\\" (click)=\\\"newTodo()\\\">New Event</button>\\n          </div>\\n          <div class=\\\"d-flex flex-row filters align-items-center\\\">\\n            Filter:\\n            <div class=\\\"circles\\\">\\n              <button class=\\\"btn btn-outline-primary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"filterPress(1)\\\">Mon</button>\\n              <button class=\\\"btn btn-outline-primary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"filterPress(2)\\\">Tue</button>\\n              <button class=\\\"btn btn-outline-primary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"filterPress(3)\\\">Wed</button>\\n              <button class=\\\"btn btn-outline-primary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"filterPress(4)\\\">Thu</button>\\n              <button class=\\\"btn btn-outline-primary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"filterPress(5)\\\">Fri</button>\\n              <button class=\\\"btn btn-outline-primary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"filterPress(6)\\\">Sat</button>\\n              <button class=\\\"btn btn-outline-primary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"filterPress(0)\\\">Sun</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"newtask\\\" class=\\\"appheader d-flex flex-column\\\">\\n        <!-- First Row -->\\n        <div class=\\\"d-flex flex-row justify-content-end\\\">\\n          <div class=\\\"mr-auto\\\">New Task</div>\\n          <button class=\\\"btn btn-outline-dark btn-sm\\\" (click)=\\\"newTodo()\\\">\\n            <i class=\\\"fas fa-times-circle\\\"></i>\\n          </button>\\n        </div>\\n        <!-- Second Row -->\\n        <div class=\\\"d-flex flex-row justify-content-end\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"newobj.todoname\\\" placeholder=\\\"Task Name\\\" class=\\\"mr-auto w-75 form-control is-required\\\">\\n          <button class=\\\"btn btn-outline-dark btn-sm px-3\\\" (click)=\\\"addNewTask()\\\">Add</button>\\n        </div>\\n        <!-- Third Row -->\\n        <div class=\\\"d-flex flex-row justify-content-between\\\">\\n          <div class=\\\"mr-auto\\\">\\n            Priority:\\n            <select [(ngModel)]=\\\"newobj.priority\\\">\\n              <option value=\\\"1\\\">High !!</option>\\n              <option value=\\\"4\\\" selected=\\\"selected\\\">Normal </option>\\n              <option value=\\\"7\\\">Low --</option>\\n            </select>\\n          </div>\\n          <div>\\n            Due Date:\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"newobjdate\\\">\\n          </div>\\n          <div class=\\\"pl-4\\\">\\n            <fieldset [disabled]=\\\"!newobjdate\\\">\\n              <input type=\\\"date\\\" [(ngModel)]=\\\"newobj.expiration\\\" (change)=\\\"parseDate()\\\">\\n            </fieldset>\\n          </div>\\n        </div>\\n        <!-- Fourth Row -->\\n        <div class=\\\"d-flex flex-row\\\">\\n          <div class=\\\"circles ml-auto\\\">\\n            Repeat:\\n            <button class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPress(1)\\\">Mon</button>\\n            <button class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPress(2)\\\">Tue</button>\\n            <button class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPress(3)\\\">Wed</button>\\n            <button class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPress(4)\\\">Thu</button>\\n            <button class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPress(5)\\\">Fri</button>\\n            <button class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPress(6)\\\">Sat</button>\\n            <button class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPress(0)\\\">Sun</button>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- /Create Button -->\\n      <div class=\\\"row\\\"><div class=\\\"col-12\\\"><hr></div></div>\\n      <!-- DISPLAY LIST STARTS HERE -->\\n      <div *ngFor=\\\"let chore of todos; let i = index\\\">\\n        <div *ngIf=\\\"!chore.editable && displayFilter(i)\\\" class=\\\"d-flex flex-row\\\" (mouseover)=\\\"hover=i\\\" (mouseleave)=\\\"hover=-1\\\">\\n          {{ chore.todoname }}\\n          <div class=\\\"ml-auto\\\">\\n            <span *ngIf=\\\"!anyedited && hover == i\\\" (click)=\\\"editTodo(i)\\\">\\n              <i class=\\\"fas fa-pencil-alt\\\"></i>\\n            </span>\\n            <span *ngIf=\\\"!anyedited && hover == i\\\" (click)=\\\"deleteTodo(i)\\\" [ngClass]=\\\"tbdeleted == i ? ' modbuttons oneclick' : 'modbuttons'\\\">\\n              <i class=\\\"fas fa-trash\\\"></i>\\n            </span>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"chore.editable\\\">\\n          <!-- First Row -->\\n          <div class=\\\"d-flex flex-row justify-content-end\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"chore.todoname\\\" placeholder=\\\"Task Name\\\" class=\\\"mr-auto w-75 form-control is-required\\\">\\n            <button class=\\\"btn btn-outline-dark btn-sm px-3\\\" (click)=\\\"finishEdit(i)\\\">Done</button>\\n          </div>\\n          <!-- Second Row -->\\n          <div class=\\\"d-flex flex-row justify-content-between\\\">\\n            <div class=\\\"mr-auto\\\">\\n              Priority:\\n              <select [(ngModel)]=\\\"chore.priority\\\">\\n                <option value=\\\"1\\\">High !!</option>\\n                <option value=\\\"4\\\" selected=\\\"selected\\\">Normal </option>\\n                <option value=\\\"7\\\">Low --</option>\\n              </select>\\n            </div>\\n            <div>\\n              Due Date:\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"editobjdate\\\">\\n            </div>\\n            <div class=\\\"pl-4\\\">\\n              <fieldset [disabled]=\\\"!editobjdate\\\">\\n                <input type=\\\"date\\\" [(ngModel)]=\\\"chore.expiration\\\" (change)=\\\"parseDate()\\\">\\n              </fieldset>\\n            </div>\\n          </div>\\n          <!-- Third Row -->\\n          <div class=\\\"d-flex flex-row\\\">\\n            <div class=\\\"circles ml-auto\\\">\\n              Repeat:\\n              <button [ngClass] = \\\"activeFilter(1, i) ? 'active' : ''\\\" class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPressx(1, i)\\\">Mon</button>\\n              <button [ngClass] = \\\"activeFilter(2, i) ? 'active' : ''\\\" class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPressx(2, i)\\\">Tue</button>\\n              <button [ngClass] = \\\"activeFilter(3, i) ? 'active' : ''\\\" class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPressx(3, i)\\\">Wed</button>\\n              <button [ngClass] = \\\"activeFilter(4, i) ? 'active' : ''\\\" class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPressx(4, i)\\\">Thu</button>\\n              <button [ngClass] = \\\"activeFilter(5, i) ? 'active' : ''\\\" class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPressx(5, i)\\\">Fri</button>\\n              <button [ngClass] = \\\"activeFilter(6, i) ? 'active' : ''\\\" class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPressx(6, i)\\\">Sat</button>\\n              <button [ngClass] = \\\"activeFilter(0, i) ? 'active' : ''\\\" class=\\\"btn btn-outline-secondary btn-sm px-1 circle\\\" type=\\\"button\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"repeatPressx(0, i)\\\">Sun</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Todoclass } from './todoclass';\nimport { Default_Todo } from './default-todos';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  todos = Default_Todo;\n  anyedited = false;\n  sortdesc = true;\n  newtask = false;\n  properties = [\n    \"todoname\",\n    \"editable\",\n    \"checked\",\n    \"created\",\n    \"priority\",\n    \"expiration\",\n    \"repeat\"\n  ];\n  filter = 0;\n  repeat = 0;\n  newobj = new Todoclass();\n  newobjdate = false;\n  editobjdate = false;\n  tempdate = new Date();\n  tempdatex = new Date();\n  tbdeleted = -1;\n  hover = -1;\n\n\n  name = `Cesar`;\n\n  addNewTask(){\n  //Initialize! Errorcount is just to be flexible in case we want to add true verification later. We use loose comparison \"==\" to check for both null and undefined. Using strict comparison \"===\" would only check for null.\n\n   let errorcount = 0;\n   if (this.newobj.todoname == null){\n     errorcount++;\n   }\n   if (this.newobj.priority == null){\n     this.newobj.priority = 4;\n   }\n   this.newobj.checked = false;\n   this.newobj.created = new Date(Date.now());\n   this.newobj.editable = false;\n   this.newobj.repeat = this.repeat;\n   \n   //if we don't find errors, go ahead and push it to the list and run newTodo to clean up and go back to the main screen\n   if (errorcount == 0){\n     this.todos.push(this.newobj);\n     this.newTodo();\n   }\n  }\n\n\n  newTodo(){\n    //clear out the old information\n    if (this.newtask == true){\n      this.newobj = new Todoclass();\n      this.newobjdate = false;\n      this.repeat = 0;\n    } else {\n      this.newobj.priority = 4;\n    }\n    //flip the switch\n    this.newtask = !this.newtask;\n    this.filter = 0;\n  }\n\n  parseDate(){\n    console.log(this.newobj.expiration);\n    this.tempdate = new Date(this.newobj.expiration);\n    this.newobj.dueday = 1 >> ((this.tempdate.getDay()) % 7);\n  }\n  parseDatex(input: number){\n    this.tempdatex = new Date(this.todos[input].expiration);\n    this.todos[input].dueday = 1 >> ((this.tempdate.getDay()) & 7);\n  }\n\n  reSort(prop: number, order: number){\n    \n  }\n  filterPress(input: number) {\n    //Using binary logic, XOR 2 to the power of the filter ID, starting at 0 for Sunday and ending at 6 for Saturday. This ensures that each number has its own binary representation. The filter for Sunday, for example, will only be 0000001 for Sunday, 1000000 for Saturday, and 1000001 for Saturday AND Sunday. XOR will compare the current filter and assign a 1 if the current overall filter and the filter button being pressed have different bits, and a 0 if they have the same bits. In essence, it's establishing a toggle. If it's already on, XORing the 1's will put out a 0 at that ID, and if it's off, XORing the 1 of the filter being applied and the 0 of the current filter will put out a 1 at that ID.\n    this.filter ^= 1 << input;\n  }\n\n  repeatPress(input: number) {\n    this.repeat ^= 1 << input;\n  }\n  \n  repeatPressx(input: number, indexx: number){\n    this.todos[indexx].repeat ^= 1 << input;\n  }\n\n  displayFilter(input: number){\n    //We're first going to make sure that this function won't break even if the value of repeat, since the class Todoclass has it defined as optional, is not instantiated. So if repeat is not defined, we're always going to return as true.\n    if (this.todos[input].repeat == undefined){\n      return true;\n    }\n    //We're still catching if repeat is given a value of zero, and we're also making sure we display all elements if the filter is not being applied.\n    if (this.todos[input].repeat == 0 || this.filter == 0){\n      return true;\n    } else {\n      //Here we use bitwise and to only flag as true if the repeat value includes the filter. This is similar to the XOR logic above, but bitwise AND will return a 1 at every digit that is a 1 on both numbers you're comparing. So, in the case that repeat = 3 (sunday and monday, 1+2 = 3) and the filter is at 50 (monday, thursday, and friday, 2+16+32 = 50), it will return 1.\n      var temp = this.todos[input].repeat & this.filter;\n      return (temp > 0) ? true : false;\n    }\n  }\n\n  cancelTodo(input: number) {\n    this.todos[input].editable = false;\n    this.anyedited = false;\n  }\n\n  activeFilter(input: number, indexx: number) {\n    let p = this.todos[indexx].repeat & (1 << input);\n    return (p > 0) ? true : false;\n  }\n\n  //create an array of todos\n  editTodo(input: number) {\n    this.todos[input].editable = true;\n    this.anyedited = true;\n    this.editobjdate = (this.todos[input].dueday != null) ? true: false;\n  }\n\n  deleteTodo(input: number) {\n    if (this.tbdeleted == input){\n      this.todos.splice(input,1);\n      this.tbdeleted = -1;\n      this.hover = -1;\n    } else {\n      this.tbdeleted = input;\n    }\n  }\n\n  finishEdit(input: number){\n    let errorcount = 0;\n    if (this.todos[input].todoname == null){\n      errorcount++;\n    }\n\n    if (this.editobjdate == false) {\n      this.todos[input].dueday = null;\n      this.todos[input].expiration = null;\n    }\n\n    if (errorcount == 0){\n      this.anyedited = false;\n      this.todos[input].editable = false;\n    }\n\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    SweetAlert2Module.forRoot({\n      buttonsStyling: false,\n      customClass: 'modal-content',\n      confirmButtonClass: 'btn btn-primary',\n      cancelButtonClass: 'btn'\n  })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Todoclass } from './todoclass';\n\nexport const Default_Todo: Todoclass[] = [\n    {todoname: `feed dog`,\n    editable: false,\n    created: new Date(Date.now()),\n    checked: false,\n    priority: 1,\n    repeat: 3},\n    {todoname: `go to burger joint`,\n    created: new Date(Date.now()),\n    editable: false,\n    checked: false,\n    priority: 4,\n    repeat: 9},\n]","export class Todoclass {\n    todoname: string;\n    editable: boolean;\n    checked: boolean;\n    created: Date;\n    priority: number;\n    expiration?: Date;\n    repeat?: number;\n    dueday?: number;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}